@model EatToday.Web.Data.Entities.Recipe

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <h4>Recipe</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RecipeType.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RecipeType.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ImageUrl)
        </dt>
        <dd>
            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <img src="@Url.Content(Model.ImageUrl)" alt="Image" style="width:100px;height:100px;max-width: 100%; height: auto;" />
            }
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RecipeIngredients.FirstOrDefault().Ingredient.Name)

        </dt>
        @foreach (var item in Model.RecipeIngredients)
        {
            <dd>
                - @Html.DisplayFor(modelItem => item.Amount) de @Html.DisplayFor(modelItem => item.Ingredient.Name)
            </dd>
        }
        <dt>
            @Html.DisplayNameFor(model => model.Instructions)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Instructions)
        </dd>
        <dt>
            # Comments
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Comments.Count)
        </dd>
        <dt>
            Rate Recipe
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RateRecipes.Count)
        </dd>
        <dt>
            # Favorite Recipes
        </dt>
        <dd>
            @Html.DisplayFor(model => model.FavouriteRecipes.Count)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="AddIngredient" asp-route-id="@Model.Id" class="btn btn-primary">Add Ingredients</a>
    <a asp-action="Index" class="btn btn-success">Back to List</a>
</div>

@if (Model.RecipeIngredients.Count == 0)
{
    <h4>Not Ingredients added yet.</h4>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.RecipeIngredients.FirstOrDefault().Ingredient.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RecipeIngredients.FirstOrDefault().Amount)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.RecipeIngredients)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Ingredient.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>

                    <td>
                        <a asp-action="EditIngredient" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                        <button data-id="@item.Id" class="btn btn-danger deleteItem" data-toggle="modal" data-target="#deleteDialog">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}

<partial  name="_DeleteDialog" />

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">
        $(document).ready(function () {
            // Delete item
            var item_to_delete;

            $('.deleteItem').click((e) => {
                item_to_delete = e.currentTarget.dataset.id;
            });

            $("#btnYesDelete").click(function () {
                window.location.href = '/Recipes/DeleteIngredient/' + item_to_delete;
            });
        });
    </script>
}
